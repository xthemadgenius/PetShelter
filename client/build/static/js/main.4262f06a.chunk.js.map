{"version":3,"sources":["views/PetDashboard.js","components/PetForm.js","views/AddPet.js","components/DeleteButton.js","views/PetDetail.js","views/EditPet.js","App.js","serviceWorker.js","index.js"],"names":["PetDashboard","props","useState","pets","setPets","useEffect","axios","get","then","res","data","catch","err","console","log","to","sort","pez","index","petType","toLowerCase","map","pet","idx","name","_id","PetForm","onSubmitHandler","initialName","initialPetType","initialDescription","initialSkill1","initialSkill2","initialSkill3","setName","setPetType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","onSubmit","e","type","value","onChange","target","AddPet","errors","setErrors","preventDefault","Axios","post","navigate","errorResponse","response","errorArr","Object","keys","key","push","properties","message","style","color","DeleteButton","id","onClick","delete","PetDetail","setPet","EditPet","loaded","setLoaded","put","App","className","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4262f06a.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Link} from '@reach/router';\r\nimport '../styles/pet.module.css';\r\nimport axios from 'axios'\r\n\r\nconst PetDashboard = (props) => {\r\n\r\n    const [pets, setPets] =useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/belts')\r\n        .then((res) => setPets(res.data))\r\n        .catch((err) => console.log(err));\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <h1>These pets are looking for a good home</h1>\r\n            <Link to=\"/pets/new\">add a pet to the Shelter</Link><br/><br/>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><h3>Name</h3></td>\r\n                        <td><h3>Type</h3></td>\r\n                        <td><h3>Actions</h3></td>\r\n                    </tr>\r\n                    {pets.sort((pez,index) => (pez.petType.toLowerCase() > index.petType.toLowerCase()) ? 1 : -1).map((pet, idx) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{pet.name}</td>\r\n                                <td>{pet.petType}</td>\r\n                                <td><Link to={`/pets/${pet._id}`}>details</Link> | <Link to={`/pets/${pet._id}/edit`}>edit</Link></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PetDashboard;","import React, {useState} from 'react';\r\n\r\nconst PetForm = (props) => {\r\n\r\n    const {onSubmitHandler,\r\n        initialName, \r\n        initialPetType,\r\n        initialDescription,\r\n        initialSkill1,\r\n        initialSkill2,\r\n        initialSkill3\r\n    } = props;\r\n\r\n    const [name, setName] = useState(initialName);\r\n    const [petType, setPetType] = useState(initialPetType);\r\n    const [description, setDescription] = useState(initialDescription);\r\n    const [skill1, setSkill1] = useState(initialSkill1);\r\n    const [skill2, setSkill2] = useState(initialSkill2);\r\n    const [skill3, setSkill3] = useState(initialSkill3);\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => {\r\n                onSubmitHandler(e, \r\n                    {\r\n                        name,\r\n                        petType,\r\n                        description,\r\n                        skill1,\r\n                        skill2,\r\n                        skill3\r\n                    }\r\n                )\r\n            }}>\r\n                <div>\r\n                    <label >Pet Name:</label>\r\n                    <input \r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={e => {setName(e.target.value)}}/>\r\n                </div>\r\n                <div>\r\n                    <label >Pet Type:</label>\r\n                    <input \r\n                    type=\"text\"\r\n                    name=\"petType\"\r\n                    value={petType}\r\n                    onChange={e => {setPetType(e.target.value)}}/>\r\n                </div>\r\n                <div>\r\n                    <label >Description:</label>\r\n                    <input \r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={e => {setDescription(e.target.value)}}/>\r\n                </div>\r\n                <h2>Skills(Optional):</h2>\r\n                <div>\r\n                    <label >Skill 1:</label>\r\n                    <input \r\n                    type=\"text\"\r\n                    name=\"skill1\"\r\n                    value={skill1}\r\n                    onChange={e => {setSkill1(e.target.value)}}/>\r\n                </div>\r\n                <div>\r\n                    <label>Skill 2:</label>\r\n                    <input \r\n                    type=\"text\"\r\n                    name=\"skill2\"\r\n                    value={skill2}\r\n                    onChange={e => {setSkill2(e.target.value)}}/>\r\n                </div>\r\n                <div>\r\n                    <label>Skill 3:</label>\r\n                    <input \r\n                    type=\"text\"\r\n                    name=\"skill3\"\r\n                    value={skill3}\r\n                    onChange={e => {setSkill3(e.target.value)}}/>\r\n                </div>\r\n                <input type=\"submit\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PetForm;","import React, {useState} from 'react';\r\nimport PetForm from '../components/PetForm';\r\nimport { Link, navigate } from '@reach/router';\r\nimport Axios from 'axios';\r\n\r\nconst AddPet = (props) => {\r\n\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const onSubmitHandler = (e, data) => {\r\n        e.preventDefault();\r\n        Axios.post(`http://localhost:8000/api/belts/`, data)\r\n        .then(res => {\r\n            navigate('/')\r\n            console.log(\"fight me\")\r\n        })\r\n        .catch(err => {\r\n            console.log(\"catch me\")\r\n            console.log(err);\r\n            const errorResponse = err.response.data.errors;\r\n            console.log(errorResponse);\r\n            const errorArr = [];\r\n            for(const key of Object.keys(errorResponse)){\r\n                console.log(errorResponse[key]);\r\n                errorArr.push(errorResponse[key].properties.message);\r\n            }\r\n            console.log(errorArr);\r\n            setErrors(errorArr);\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Know a Pet needing a Home</h1>\r\n            <Link to=\"/\">Back to home</Link>\r\n            <PetForm\r\n            onSubmitHandler={onSubmitHandler}\r\n            initialName=\"\"\r\n            initialPetType=\"\"\r\n            initialDescription=\"\"\r\n            initialSkill1=\"\"\r\n            initialSkill2=\"\"\r\n            initialSkill3=\"\"\r\n            />\r\n            {errors.map((err, idx) => {\r\n                return (\r\n                <p key={idx} style={{ color: \"red\" }}>{err}</p>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default AddPet;","import React from 'react';\r\nimport axios from 'axios';\r\nimport {navigate} from '@reach/router';\r\n\r\nconst DeleteButton = (props) => {\r\n\r\n    const {id} = props;\r\n\r\n    const onClickHandler = (e) => {\r\n        e.preventDefault();\r\n        axios.delete(`http://localhost:8000/api/belts/${id}`)\r\n        .then(res => {\r\n            navigate('/');\r\n            console.log(res);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    return (\r\n        <button onClick={onClickHandler}>\r\n            Adopt\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteButton;","import React, {useState, useEffect} from 'react';\r\nimport DeleteButton from '../components/DeleteButton';\r\nimport {Link} from \"@reach/router\";\r\nimport axios from 'axios';\r\n\r\nconst PetDetail = (props) => {\r\n\r\n    const {id} = props;\r\n    const [pet, setPet] =useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/belts/${id}`)\r\n        .then((res) => setPet(res.data))\r\n        .catch((err) => console.log(err));\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h1>Know a pet needing a good home?</h1>\r\n            <h2>Details about: {pet.name}</h2>\r\n            <Link to=\"/\">Back to home</Link>\r\n            <div>\r\n                <p>Pet Type: {pet.petType}</p>\r\n                <p>Description: {pet.description}</p>\r\n                <h3>Skills</h3>\r\n                <p>{pet.skill1}</p>\r\n                <p>{pet.skill2}</p>\r\n                <p>{pet.skill3}</p>\r\n                <DeleteButton id={pet._id}>Adopt PETNAME</DeleteButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PetDetail;","import React, {useState, useEffect} from 'react';\r\nimport PetForm from '../components/PetForm';\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nconst EditPet = (props) => {\r\n\r\n    const {id} = props;\r\n\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const [pet, setPet] = useState({});\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/belts/${id}`)\r\n        .then((res) => {\r\n            setPet(res.data);\r\n            setLoaded(true);\r\n        })\r\n        .catch(err => console.log(err));\r\n    })\r\n\r\n    const onSubmitHandler = (e, data) => {\r\n        e.preventDefault();\r\n        axios.put(`http://localhost:8000/api/belts/${id}`, data)\r\n        .then(res => {\r\n            console.log(res)\r\n            if(res.data.errors){\r\n                setErrors(res.data.errors)\r\n            }else{\r\n                navigate(\"/\")\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(\"catch me\")\r\n            console.log(err);\r\n            const errorResponse = err.response.data.errors;\r\n            console.log(errorResponse);\r\n            const errorArr = [];\r\n            for(const key of Object.keys(errorResponse)){\r\n                console.log(errorResponse[key]);\r\n                errorArr.push(errorResponse[key].properties.message);\r\n            }\r\n            console.log(errorArr);\r\n            setErrors(errorArr);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Edit {pet.name}</h1>\r\n            <Link to=\"/\">Back to home</Link>\r\n            {loaded &&\r\n                <PetForm\r\n                onSubmitHandler={onSubmitHandler}\r\n                initialName={pet.name}\r\n                initialPetType={pet.petType}\r\n                initialDescription={pet.description}\r\n                initialSkill1={pet.skill1}\r\n                initialSkill2={pet.skill2}\r\n                initialSkill3={pet.skill3}\r\n                />\r\n            }\r\n            {errors.map((err, idx) => {\r\n                return (\r\n                <p key={idx} style={{ color: \"red\" }}>{err}</p>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default EditPet;","import React from 'react';\nimport './App.css';\nimport { Router } from '@reach/router';\nimport PetDashboard from './views/PetDashboard';\nimport AddPet from './views/AddPet';\nimport PetDetail from './views/PetDetail';\nimport EditPet from './views/EditPet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <PetDashboard path=\"/\"/>\n        <AddPet path=\"/pets/new\"/>\n        <PetDetail path=\"/pets/:id\"/>\n        <EditPet path=\"/pets/:id/edit\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}